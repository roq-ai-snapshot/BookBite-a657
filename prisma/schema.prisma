generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model feedback {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id   String     @db.Uuid
  restaurant_id String     @db.Uuid
  rating        Int
  comment       String?    @db.VarChar
  user          user       @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  restaurant_id String       @db.Uuid
  name          String       @db.VarChar
  price         Int
  availability  Boolean
  restaurant    restaurant   @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item    order_item[]
}

model order {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id   String       @db.Uuid
  restaurant_id String       @db.Uuid
  status        String       @db.VarChar
  total_price   Int
  user          user         @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  restaurant    restaurant   @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item    order_item[]
}

model order_item {
  id           String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id     String @db.Uuid
  menu_item_id String @db.Uuid
  quantity     Int
  menu         menu   @relation(fields: [menu_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order        order  @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model promotion {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  restaurant_id String     @db.Uuid
  name          String     @db.VarChar
  description   String     @db.VarChar
  start_date    DateTime   @db.Date
  end_date      DateTime   @db.Date
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurant {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String      @db.VarChar
  location        String      @db.VarChar
  contact_info    String      @db.VarChar
  operating_hours String      @db.VarChar
  owner_id        String      @db.Uuid
  feedback        feedback[]
  menu            menu[]
  order           order[]
  promotion       promotion[]
  user            user        @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  staff           staff[]
}

model staff {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String     @db.Uuid
  restaurant_id String     @db.Uuid
  role          String     @db.VarChar
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  roq_user_id String       @db.VarChar
  tenant_id   String       @db.VarChar
  role        String       @db.VarChar
  feedback    feedback[]
  order       order[]
  restaurant  restaurant[]
  staff       staff[]
}
